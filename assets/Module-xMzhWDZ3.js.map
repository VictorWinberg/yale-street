{"version":3,"file":"Module-xMzhWDZ3.js","sources":["../../src/features/modules/components/ModuleForm.tsx","../../src/features/modules/components/ModuleTable.tsx","../../src/features/modules/config/ModuleConfig.tsx","../../src/features/modules/components/Module.tsx"],"sourcesContent":["// material-ui\nimport { Button } from '@mui/material';\n\n// third-party\nimport { UseMutationResult } from '@tanstack/react-query';\n\n// project imports\nimport { FormProps } from '@/ui-component/SebraForm';\nimport { AnyData, ModuleBaseConfigItem } from '../config/ModuleConfig';\n\nexport interface ModuleFormConfigItem<M extends AnyData> extends ModuleBaseConfigItem {\n  type: 'form';\n  FormComponent: React.FC<FormProps<M>>;\n  createMutation: () => UseMutationResult<unknown, Error, M, unknown>;\n  props: FormProps<M>;\n  configProps?: FormProps<M>;\n}\n\ntype ModuleFormProps<M extends AnyData> = {\n  selectedModule: ModuleFormConfigItem<M>;\n};\n\nconst ModuleForm = <M extends AnyData>({ selectedModule }: ModuleFormProps<M>) => {\n  const { FormComponent, createMutation, props } = selectedModule;\n  const { mutate } = createMutation();\n\n  return (\n    <FormComponent\n      onSubmit={mutate}\n      {...props}\n      renderBottomContent={() => (\n        <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 2 }}>\n          Skapa\n        </Button>\n      )}\n    />\n  );\n};\n\nexport default ModuleForm;\n","// material-ui\nimport { MaterialReactTable } from 'material-react-table';\n\n// third-party\nimport { UseQueryResult } from '@tanstack/react-query';\n\n// project imports\nimport { DataTableProps, useDataTable } from '@/hooks/useDataTable';\nimport { FilterParam, StringParam, useQueryParam } from '@/hooks/useQueryParam';\nimport { AnyData, ModuleBaseConfigItem } from '../config/ModuleConfig';\n\nexport interface ModuleTableConfigItem<M extends AnyData> extends ModuleBaseConfigItem {\n  type: 'table';\n  useData: () => UseQueryResult<M[], Error>;\n  props: Omit<DataTableProps<M>, 'data'>;\n  configProps?: Omit<DataTableProps<M>, 'data' | 'columns'>;\n}\n\ntype ModuleTableProps<M extends AnyData> = {\n  selectedModule: ModuleTableConfigItem<M>;\n};\n\nconst ModuleTable = <M extends AnyData>({ selectedModule }: ModuleTableProps<M>) => {\n  const { useData, props } = selectedModule;\n\n  const [columnFilters, setColumnFilters] = useQueryParam('filters', FilterParam, []);\n  const [globalFilter, setGlobalFilter] = useQueryParam('search', StringParam, '');\n  const { data = [] } = useData();\n\n  const table = useDataTable({\n    data,\n    initialState: { showGlobalFilter: !!globalFilter },\n    state: { columnFilters, globalFilter },\n    enableColumnFilters: false,\n    enableColumnResizing: false,\n    enableDensityToggle: false,\n    enableEditing: false,\n    enableRowActions: false,\n    enableTopToolbar: false,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    ...props\n  });\n\n  return <MaterialReactTable table={table} />;\n};\n\nexport default ModuleTable;\n","import { Assignment, Company, Contact } from '@/api/gql/graphql';\nimport AssignmentForm from '@/features/assignments/components/AssignmentForm';\nimport { assignmentColumns } from '@/features/assignments/config/AssignmentConfig';\nimport { useCreateAssignment } from '@/features/assignments/hooks/useAssignmentsMutations';\nimport { useAssignments } from '@/features/assignments/hooks/useAssignmentsQueries';\nimport CompanyForm from '@/features/companies/components/CompanyForm';\nimport { companyColumns } from '@/features/companies/config/CompanyConfig';\nimport { useCreateCompany } from '@/features/companies/hooks/useCompaniesMutations';\nimport { useCompanies } from '@/features/companies/hooks/useCompaniesQueries';\nimport ContactForm from '@/features/contacts/components/ContactForm';\nimport { contactColumns } from '@/features/contacts/config/ContactConfig';\nimport { useCreateContact } from '@/features/contacts/hooks/useContactsMutations';\nimport { useContacts } from '@/features/contacts/hooks/useContactsQueries';\nimport { ModuleFormConfigItem } from '../components/ModuleForm';\nimport { ModuleTableConfigItem } from '../components/ModuleTable';\n\nexport type AnyData = Record<string, unknown>;\n\nexport interface ModuleBaseConfigItem {\n  key: string;\n  label: string;\n  title: string;\n}\n\ntype ModuleFormConfig<M extends AnyData> = ModuleFormConfigItem<M>;\ntype ModuleTableConfig<M extends AnyData> = ModuleTableConfigItem<M>;\nexport type ModuleConfigItem<M extends AnyData> = ModuleFormConfig<M> | ModuleTableConfig<M>;\n\nexport const modules: ModuleConfigItem<AnyData>[] = [\n  {\n    key: 'companyForm',\n    label: 'Formulär - Bolag',\n    title: 'Nytt bolag',\n    type: 'form',\n    FormComponent: CompanyForm,\n    createMutation: useCreateCompany,\n    props: {}\n  } satisfies ModuleFormConfigItem<Company>,\n  {\n    key: 'assignmentForm',\n    label: 'Formulär - Uppdrag',\n    title: 'Nytt uppdrag',\n    type: 'form',\n    FormComponent: AssignmentForm,\n    createMutation: useCreateAssignment,\n    props: {}\n  } satisfies ModuleFormConfigItem<Assignment>,\n  {\n    key: 'contactForm',\n    label: 'Formulär - Kontaktperson',\n    title: 'Ny kontaktperson',\n    type: 'form',\n    FormComponent: ContactForm,\n    createMutation: useCreateContact,\n    props: {}\n  } satisfies ModuleFormConfigItem<Omit<Contact, 'company'>>,\n  {\n    key: 'companiesTable',\n    label: 'Tabell - Bolag',\n    title: 'Bolag',\n    type: 'table',\n    useData: useCompanies,\n    props: { columns: companyColumns },\n    configProps: { enableTopToolbar: true, enableColumnFilters: true }\n  } satisfies ModuleTableConfigItem<Company>,\n  {\n    key: 'assignmentsTable',\n    label: 'Tabell - Uppdrag',\n    title: 'Uppdrag',\n    type: 'table',\n    useData: useAssignments,\n    props: { columns: assignmentColumns },\n    configProps: { enableTopToolbar: true, enableColumnFilters: true }\n  } satisfies ModuleTableConfigItem<Assignment>,\n  {\n    key: 'contactsTable',\n    label: 'Tabell - Kontaktperson',\n    title: 'Kontakter',\n    type: 'table',\n    useData: useContacts,\n    props: { columns: contactColumns },\n    configProps: { enableTopToolbar: true, enableColumnFilters: true }\n  } satisfies ModuleTableConfigItem<Contact>\n] as ModuleConfigItem<AnyData>[];\n","import { useEffect, useMemo } from 'react';\n\n// material-ui\nimport { Box, Typography } from '@mui/material';\n\n// project imports\nimport { StringParam, useQueryParam } from '@/hooks/useQueryParam';\nimport ModuleForm from '../components/ModuleForm';\nimport ModuleTable from '../components/ModuleTable';\nimport { AnyData, ModuleConfigItem, modules } from '../config/ModuleConfig';\n\ninterface ModuleProps {\n  title?: string | null;\n  selectedModule?: ModuleConfigItem<AnyData> | null;\n}\n\nconst Module = (props: ModuleProps) => {\n  const [title, setTitle] = useQueryParam('title', StringParam, '');\n  const [initialModule, setInitialModule] = useQueryParam('module', StringParam, '');\n  const selectedModule = useMemo(() => modules.find((module) => module.key === initialModule), [initialModule]);\n\n  useEffect(() => {\n    if (props.selectedModule === undefined) return;\n    setInitialModule(props.selectedModule?.key ?? '');\n  }, [props.selectedModule, setInitialModule]);\n\n  useEffect(() => {\n    if (props.title === undefined) return;\n    setTitle(props.title ?? '');\n  }, [props.title, setTitle]);\n\n  return (\n    <Box sx={{ my: 1 }}>\n      <Typography variant=\"h4\" color=\"primary\">\n        {title}\n      </Typography>\n\n      <Box sx={{ my: 1 }} />\n\n      {selectedModule?.type === 'table' && <ModuleTable selectedModule={selectedModule} />}\n      {selectedModule?.type === 'form' && <ModuleForm selectedModule={selectedModule} />}\n    </Box>\n  );\n};\n\nexport default Module;\n"],"names":["ModuleForm","selectedModule","FormComponent","createMutation","props","mutate","jsx","Button","ModuleTable","useData","columnFilters","setColumnFilters","useQueryParam","FilterParam","globalFilter","setGlobalFilter","StringParam","data","table","useDataTable","MaterialReactTable","modules","CompanyForm","useCreateCompany","AssignmentForm","useCreateAssignment","ContactForm","useCreateContact","useCompanies","companyColumns","useAssignments","assignmentColumns","useContacts","contactColumns","Module","title","setTitle","initialModule","setInitialModule","useMemo","module","useEffect","_a","Box","Typography"],"mappings":"k+BAsBA,MAAMA,EAAa,CAAoB,CAAE,eAAAC,KAAyC,CAChF,KAAM,CAAE,cAAAC,EAAe,eAAAC,EAAgB,MAAAC,CAAA,EAAUH,EAC3C,CAAE,OAAAI,GAAWF,IAGjB,OAAAG,EAAA,IAACJ,EAAA,CACC,SAAUG,EACT,GAAGD,EACJ,oBAAqB,IACnBE,EAAA,IAACC,EAAO,CAAA,KAAK,QAAQ,KAAK,SAAS,QAAQ,YAAY,MAAM,UAAU,GAAI,CAAE,GAAI,GAAK,SAEtF,QAAA,CAAA,CAAA,CAIR,ECfMC,EAAc,CAAoB,CAAE,eAAAP,KAA0C,CAC5E,KAAA,CAAE,QAAAQ,EAAS,MAAAL,CAAU,EAAAH,EAErB,CAACS,EAAeC,CAAgB,EAAIC,EAAc,UAAWC,EAAa,CAAA,CAAE,EAC5E,CAACC,EAAcC,CAAe,EAAIH,EAAc,SAAUI,EAAa,EAAE,EACzE,CAAE,KAAAC,EAAO,IAAOR,EAAQ,EAExBS,EAAQC,EAAa,CACzB,KAAAF,EACA,aAAc,CAAE,iBAAkB,CAAC,CAACH,CAAa,EACjD,MAAO,CAAE,cAAAJ,EAAe,aAAAI,CAAa,EACrC,oBAAqB,GACrB,qBAAsB,GACtB,oBAAqB,GACrB,cAAe,GACf,iBAAkB,GAClB,iBAAkB,GAClB,sBAAuBH,EACvB,qBAAsBI,EACtB,GAAGX,CAAA,CACJ,EAEM,OAAAE,MAACc,GAAmB,MAAAF,CAAc,CAAA,CAC3C,ECjBaG,EAAuC,CAClD,CACE,IAAK,cACL,MAAO,mBACP,MAAO,aACP,KAAM,OACN,cAAeC,EACf,eAAgBC,EAChB,MAAO,CAAC,CACV,EACA,CACE,IAAK,iBACL,MAAO,qBACP,MAAO,eACP,KAAM,OACN,cAAeC,EACf,eAAgBC,EAChB,MAAO,CAAC,CACV,EACA,CACE,IAAK,cACL,MAAO,2BACP,MAAO,mBACP,KAAM,OACN,cAAeC,EACf,eAAgBC,EAChB,MAAO,CAAC,CACV,EACA,CACE,IAAK,iBACL,MAAO,iBACP,MAAO,QACP,KAAM,QACN,QAASC,EACT,MAAO,CAAE,QAASC,CAAe,EACjC,YAAa,CAAE,iBAAkB,GAAM,oBAAqB,EAAK,CACnE,EACA,CACE,IAAK,mBACL,MAAO,mBACP,MAAO,UACP,KAAM,QACN,QAASC,EACT,MAAO,CAAE,QAASC,CAAkB,EACpC,YAAa,CAAE,iBAAkB,GAAM,oBAAqB,EAAK,CACnE,EACA,CACE,IAAK,gBACL,MAAO,yBACP,MAAO,YACP,KAAM,QACN,QAASC,EACT,MAAO,CAAE,QAASC,CAAe,EACjC,YAAa,CAAE,iBAAkB,GAAM,oBAAqB,EAAK,CACnE,CACF,ECnEMC,EAAU9B,GAAuB,CACrC,KAAM,CAAC+B,EAAOC,CAAQ,EAAIxB,EAAc,QAASI,EAAa,EAAE,EAC1D,CAACqB,EAAeC,CAAgB,EAAI1B,EAAc,SAAUI,EAAa,EAAE,EAC3Ef,EAAiBsC,EAAA,QAAQ,IAAMlB,EAAQ,KAAMmB,GAAWA,EAAO,MAAQH,CAAa,EAAG,CAACA,CAAa,CAAC,EAE5GI,OAAAA,EAAAA,UAAU,IAAM,OACVrC,EAAM,iBAAmB,QACZkC,IAAAI,EAAAtC,EAAM,iBAAN,YAAAsC,EAAsB,MAAO,EAAE,CAC/C,EAAA,CAACtC,EAAM,eAAgBkC,CAAgB,CAAC,EAE3CG,EAAAA,UAAU,IAAM,CACVrC,EAAM,QAAU,QACXgC,EAAAhC,EAAM,OAAS,EAAE,CACzB,EAAA,CAACA,EAAM,MAAOgC,CAAQ,CAAC,SAGvBO,EAAI,CAAA,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAAArC,MAACsC,EAAW,CAAA,QAAQ,KAAK,MAAM,UAC5B,SACHT,EAAA,QAECQ,EAAI,CAAA,GAAI,CAAE,GAAI,GAAK,GAEnB1C,GAAA,YAAAA,EAAgB,QAAS,SAAWK,EAAA,IAACE,GAAY,eAAAP,EAAgC,GACjFA,GAAA,YAAAA,EAAgB,QAAS,QAAUK,EAAA,IAACN,GAAW,eAAAC,EAAgC,CAClF,CAAA,CAAA,CAEJ"}