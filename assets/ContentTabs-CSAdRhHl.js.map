{"version":3,"file":"ContentTabs-CSAdRhHl.js","sources":["../../src/ui-component/ContentTabs.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Divider, IconButton, Tab, Tabs } from '@mui/material';\n\n// project imports\nimport { StringParam, useQueryParam } from '@/hooks/useQueryParam';\n\n// assets\nimport { Close } from '@mui/icons-material';\n\n// ==============================|| CONTENT TABS ||============================== //\n\ntype Tab = { id: string; label: string; content: React.ReactNode };\n\ninterface ContentTabsProps {\n  tabs: Tab[];\n}\n\nconst ContentTabs = (props: ContentTabsProps) => {\n  const [tabs, setTabs] = useState<Tab[]>(props.tabs);\n  const [selected, setSelected] = useQueryParam('tab', StringParam, props.tabs[0].id);\n\n  useEffect(() => {\n    setTabs((prevTabs) => prevTabs.map((tab) => props.tabs.find((t) => t.id === tab.id) || tab));\n  }, [props.tabs]);\n\n  const handleClick = (_event: React.SyntheticEvent, newKey: string) => {\n    setSelected(newKey);\n  };\n\n  const handleRemove = (event: React.SyntheticEvent, removeKey: string) => {\n    event.stopPropagation();\n\n    // Removing the current tab, set the key to the next/previous tab\n    if (selected === removeKey) {\n      const removeIndex = tabs.findIndex((tab) => tab.id === removeKey);\n      const goToTab = tabs[removeIndex + 1] || tabs[removeIndex - 1];\n      setSelected(goToTab?.id ?? null);\n    }\n\n    setTabs(tabs.filter((tab) => tab.id !== removeKey));\n  };\n\n  return (\n    <>\n      <Tabs value={selected} onChange={handleClick} variant=\"scrollable\">\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.id}\n            value={tab.id}\n            label={\n              <span>\n                {tab.label}\n\n                {/* We can enable close button, if we want */}\n                {false && (\n                  <IconButton\n                    component=\"div\"\n                    tabIndex={-1}\n                    size=\"small\"\n                    onClick={(event) => handleRemove(event, tab.id)}\n                    sx={{\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      zIndex: 1,\n                      padding: '4px'\n                    }}\n                  >\n                    <Close sx={{ fontSize: '0.8rem' }} />\n                  </IconButton>\n                )}\n              </span>\n            }\n            {...a11yProps(tab.id)}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      {tabs.find((tab) => tab.id === selected)?.content}\n    </>\n  );\n};\n\nconst a11yProps = (id: string) => ({\n  id: `content-tab-${id}`,\n  'aria-controls': `content-tabpanel-${id}`,\n  tabIndex: 0\n});\n\nexport default ContentTabs;\n"],"names":["ContentTabs","props","tabs","setTabs","useState","selected","setSelected","useQueryParam","StringParam","useEffect","prevTabs","tab","t","handleClick","_event","newKey","jsxs","Fragment","jsx","Tabs","Tab","a11yProps","Divider","_a","id"],"mappings":"+cAmBM,MAAAA,EAAeC,GAA4B,OAC/C,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAgBH,EAAM,IAAI,EAC5C,CAACI,EAAUC,CAAW,EAAIC,EAAc,MAAOC,EAAaP,EAAM,KAAK,CAAC,EAAE,EAAE,EAElFQ,EAAAA,UAAU,IAAM,CACdN,EAASO,GAAaA,EAAS,IAAKC,GAAQV,EAAM,KAAK,KAAMW,GAAMA,EAAE,KAAOD,EAAI,EAAE,GAAKA,CAAG,CAAC,CAAA,EAC1F,CAACV,EAAM,IAAI,CAAC,EAET,MAAAY,EAAc,CAACC,EAA8BC,IAAmB,CACpET,EAAYS,CAAM,CAAA,EAgBpB,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAK,MAAOd,EAAU,SAAUQ,EAAa,QAAQ,aACnD,SAAAX,EAAK,IAAKS,GACTO,EAAA,IAACE,EAAA,CAEC,MAAOT,EAAI,GACX,aACG,OACE,CAAA,SAAA,CAAIA,EAAA,MAGJ,EAAA,EAiBH,EAED,GAAGU,EAAUV,EAAI,EAAE,CAAA,EA1BfA,EAAI,EA4BZ,CAAA,EACH,QACCW,EAAQ,EAAA,GACRC,EAAArB,EAAK,KAAMS,GAAQA,EAAI,KAAON,CAAQ,IAAtC,YAAAkB,EAAyC,OAC5C,CAAA,CAAA,CAEJ,EAEMF,EAAaG,IAAgB,CACjC,GAAI,eAAeA,CAAE,GACrB,gBAAiB,oBAAoBA,CAAE,GACvC,SAAU,CACZ"}