{"version":3,"file":"SebraDialog-BySdJsEA.js","sources":["../../src/hooks/useDialogActions.ts","../../src/ui-component/SebraDialog.tsx"],"sourcesContent":["// material-ui\nimport { MRT_Row, MRT_RowData, MRT_TableInstance } from 'material-react-table';\n\nfunction useDialogActions<T extends MRT_RowData>(table: MRT_TableInstance<T>, row: MRT_Row<T>) {\n  const {\n    getState,\n    options: { onCreatingRowCancel, onCreatingRowSave, onEditingRowCancel, onEditingRowSave },\n    setCreatingRow,\n    setEditingRow\n  } = table;\n  const { creatingRow, editingRow, isSaving } = getState();\n\n  const isCreating = creatingRow?.id === row.id;\n  const isEditing = editingRow?.id === row.id;\n\n  const handleCancel = () => {\n    if (isCreating) {\n      onCreatingRowCancel?.({ row, table });\n      setCreatingRow(null);\n    } else if (isEditing) {\n      onEditingRowCancel?.({ row, table });\n      setEditingRow(null);\n    }\n  };\n\n  const handleSubmit = (values: T) => {\n    if (isCreating) {\n      onCreatingRowSave?.({\n        exitCreatingMode: () => setCreatingRow(null),\n        row,\n        table,\n        values\n      });\n    } else if (isEditing) {\n      onEditingRowSave?.({\n        exitEditingMode: () => setEditingRow(null),\n        row,\n        table,\n        values\n      });\n    }\n  };\n\n  return { creatingRow, isSaving, handleCancel, handleSubmit };\n}\n\nexport default useDialogActions;\n","// material-ui\nimport { Box, Button, CircularProgress, DialogContent, DialogTitle } from '@mui/material';\nimport { MRT_Row, MRT_RowData, MRT_TableInstance } from 'material-react-table';\n\n// third-party\nimport { DefaultValues } from 'react-hook-form';\n\n// project imports\nimport useDialogActions from '@/hooks/useDialogActions';\nimport { FormProps } from '@/ui-component/SebraForm';\n\n// ==============================|| SEBRA DIALOG ||============================== //\n\ninterface SebraDialogProps<T extends MRT_RowData> {\n  table: MRT_TableInstance<T>;\n  row: MRT_Row<T>;\n  titles: { creating: string; editing: string };\n  FormComponent: React.ComponentType<FormProps<T>>;\n  defaultValues?: DefaultValues<T>;\n}\n\nconst SebraDialog = <T extends MRT_RowData>({\n  table,\n  row,\n  titles,\n  FormComponent,\n  defaultValues\n}: SebraDialogProps<T>) => {\n  const { creatingRow, isSaving, handleCancel, handleSubmit } = useDialogActions(table, row);\n\n  return (\n    <>\n      <DialogTitle variant=\"h4\" color=\"primary\">\n        {creatingRow ? titles.creating : titles.editing}\n      </DialogTitle>\n      <DialogContent>\n        <FormComponent\n          sx={{ mt: 1 }}\n          formProps={{ values: { ...defaultValues, ...row.original } }}\n          onSubmit={handleSubmit}\n          renderBottomContent={() => (\n            <Box sx={{ mt: 3, ml: 'auto' }}>\n              <Button onClick={handleCancel} sx={{ minWidth: '100px' }}>\n                Avbryt\n              </Button>\n              <Button disabled={isSaving} type=\"submit\" sx={{ minWidth: '100px' }} variant=\"contained\">\n                {isSaving && <CircularProgress color=\"inherit\" size={18} />}\n                Spara\n              </Button>\n            </Box>\n          )}\n        />\n      </DialogContent>\n    </>\n  );\n};\n\nexport default SebraDialog;\n"],"names":["useDialogActions","table","row","getState","onCreatingRowCancel","onCreatingRowSave","onEditingRowCancel","onEditingRowSave","setCreatingRow","setEditingRow","creatingRow","editingRow","isSaving","isCreating","isEditing","values","SebraDialog","titles","FormComponent","defaultValues","handleCancel","handleSubmit","jsxs","Fragment","jsx","DialogTitle","DialogContent","Box","Button","CircularProgress"],"mappings":"yaAGA,SAASA,EAAwCC,EAA6BC,EAAiB,CACvF,KAAA,CACJ,SAAAC,EACA,QAAS,CAAE,oBAAAC,EAAqB,kBAAAC,EAAmB,mBAAAC,EAAoB,iBAAAC,CAAiB,EACxF,eAAAC,EACA,cAAAC,CACE,EAAAR,EACE,CAAE,YAAAS,EAAa,WAAAC,EAAY,SAAAC,GAAaT,EAAS,EAEjDU,GAAaH,GAAA,YAAAA,EAAa,MAAOR,EAAI,GACrCY,GAAYH,GAAA,YAAAA,EAAY,MAAOT,EAAI,GA8BzC,MAAO,CAAE,YAAAQ,EAAa,SAAAE,EAAU,aA5BX,IAAM,CACrBC,GACoBT,GAAA,MAAAA,EAAA,CAAE,IAAAF,EAAK,MAAAD,CAAA,GAC7BO,EAAe,IAAI,GACVM,IACYR,GAAA,MAAAA,EAAA,CAAE,IAAAJ,EAAK,MAAAD,CAAA,GAC5BQ,EAAc,IAAI,EACpB,EAqB4C,aAlBxBM,GAAc,CAC9BF,EACkBR,GAAA,MAAAA,EAAA,CAClB,iBAAkB,IAAMG,EAAe,IAAI,EAC3C,IAAAN,EACA,MAAAD,EACA,OAAAc,CAAA,GAEOD,IACUP,GAAA,MAAAA,EAAA,CACjB,gBAAiB,IAAME,EAAc,IAAI,EACzC,IAAAP,EACA,MAAAD,EACA,OAAAc,CAAA,GAEJ,CAGyD,CAC7D,CCvBA,MAAMC,EAAc,CAAwB,CAC1C,MAAAf,EACA,IAAAC,EACA,OAAAe,EACA,cAAAC,EACA,cAAAC,CACF,IAA2B,CACnB,KAAA,CAAE,YAAAT,EAAa,SAAAE,EAAU,aAAAQ,EAAc,aAAAC,GAAiBrB,EAAiBC,EAAOC,CAAG,EAEzF,OAEIoB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAY,QAAQ,KAAK,MAAM,UAC7B,SAAcf,EAAAO,EAAO,SAAWA,EAAO,OAC1C,CAAA,QACCS,EACC,CAAA,SAAAF,EAAA,IAACN,EAAA,CACC,GAAI,CAAE,GAAI,CAAE,EACZ,UAAW,CAAE,OAAQ,CAAE,GAAGC,EAAe,GAAGjB,EAAI,SAAW,EAC3D,SAAUmB,EACV,oBAAqB,IACnBC,EAAAA,KAACK,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,GAAI,MAAA,EACpB,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAO,QAASR,EAAc,GAAI,CAAE,SAAU,OAAA,EAAW,SAE1D,QAAA,CAAA,EACCE,EAAAA,KAAAM,EAAA,CAAO,SAAUhB,EAAU,KAAK,SAAS,GAAI,CAAE,SAAU,OAAA,EAAW,QAAQ,YAC1E,SAAA,CAAAA,GAAaY,EAAA,IAAAK,EAAA,CAAiB,MAAM,UAAU,KAAM,GAAI,EAAG,OAAA,EAE9D,CAAA,EACF,CAAA,CAAA,EAGN,CACF,CAAA,CAAA,CAEJ"}